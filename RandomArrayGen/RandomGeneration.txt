## benchmarker:         release 4.0.1 (for python)
## python version:      3.5.2
## python compiler:     GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)
## python platform:     Darwin-16.1.0-x86_64-i386-64bit
## python executable:   /Users/ringle53/.pyenv/versions/anaconda3-4.1.1/bin/python
## cpu model:           Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz 
## parameters:          loop=100000, cycle=5, extra=1

## (#1)                        real    (total    = user    + sys)
for: random.uniform          3.0645    2.5800    2.3700    0.2100
numpy.random.uniform         0.4111    0.3300    0.2900    0.0400

## (#2)                        real    (total    = user    + sys)
for: random.uniform          3.3936    2.6200    2.4200    0.2000
numpy.random.uniform         0.3738    0.3300    0.2900    0.0400

## (#3)                        real    (total    = user    + sys)
for: random.uniform          3.1028    2.5700    2.3700    0.2000
numpy.random.uniform         0.3862    0.3200    0.2800    0.0400

## (#4)                        real    (total    = user    + sys)
for: random.uniform          3.0762    2.5700    2.3700    0.2000
numpy.random.uniform         0.4122    0.3500    0.3100    0.0400

## (#5)                        real    (total    = user    + sys)
for: random.uniform          3.1151    2.5700    2.3800    0.1900
numpy.random.uniform         0.5087    0.3500    0.3100    0.0400

## (#6)                        real    (total    = user    + sys)
for: random.uniform          2.7921    2.5600    2.3700    0.1900
numpy.random.uniform         0.3796    0.3100    0.2800    0.0300

## (#7)                        real    (total    = user    + sys)
for: random.uniform          2.9812    2.5100    2.3100    0.2000
numpy.random.uniform         0.4039    0.3400    0.3000    0.0400

## Ignore min & max             min     cycle       max     cycle
for: random.uniform          2.7921      (#6)    3.3936      (#2)
numpy.random.uniform         0.3738      (#2)    0.5087      (#5)

## Average of 5 (=7-2*1)       real    (total    = user    + sys)
for: random.uniform          3.0680    2.5600    2.3600    0.2000
numpy.random.uniform         0.3986    0.3300    0.2920    0.0380

## Ranking                     real
numpy.random.uniform         0.3986  (100.0) ********************
for: random.uniform          3.0680  ( 13.0) ***

## Matrix                      real    [01]    [02]
[01] numpy.random.uniform    0.3986   100.0   769.6
[02] for: random.uniform     3.0680    13.0   100.0

